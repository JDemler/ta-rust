all			            pub fn all() -> 
bitand			            fn bitand(self, other: 
bitor			            fn bitor(self, other: 
bits			            pub fn bits(&self) -> 
bitxor			            fn bitxor(self, other: 
contains			            pub fn contains(&self, other: 
empty			            pub fn empty() -> 
from_bits			            pub fn from_bits(bits: 
from_bits_truncate			            pub fn from_bits_truncate(bits: 
hash			    fn hash<T: Hash>(t: &T) -> u64 
insert			            pub fn insert(&mut self, other: 
intersects			            pub fn intersects(&self, other: 
is_all			            pub fn is_all(&self) -> bool 
is_empty			            pub fn is_empty(&self) -> bool 
not			            fn not(self) -> 
remove			            pub fn remove(&mut self, other: 
sub			            fn sub(self, other: 
tests			mod tests 
toggle			            pub fn toggle(&mut self, other: 
