Clone			impl Clone for Uuid 
Default			impl Default for Uuid 
Eq			impl Eq for Uuid 
FromStr			impl FromStr for Uuid 
ParseError			pub enum ParseError 
TotalEq			impl TotalEq for Uuid {}
Uuid			impl Uuid 
Uuid			pub struct Uuid 
UuidFields			struct UuidFields 
UuidVariant			pub enum UuidVariant 
UuidVersion			pub enum UuidVersion 
as_bytes			    pub fn as_bytes<'a>(&'a self) -> &'a [u8] 
bench			mod bench 
clone			    fn clone(&self) -> Uuid { *self }
create_uuids			    pub fn create_uuids(bh: &mut BenchHarness) 
decode			    fn decode(d: &mut T) -> Result<Uuid, E> 
default			    fn default() -> Uuid 
encode			    fn encode(&self, e: &mut T) -> Result<(), E> 
eq			    fn eq(&self, other: &Uuid) -> bool 
fmt			    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result 
fmt			impl fmt::Show for ParseError 
fmt			impl fmt::Show for Uuid 
from_bytes			    pub fn from_bytes(b: &[u8]) -> Option<Uuid> 
from_fields			    pub fn from_fields(d1: u32, d2: u16, d3: u16, d4: &[u8]) -> Uuid 
from_str			    fn from_str(us: &str) -> Option<Uuid> 
get_variant			    pub fn get_variant(&self) -> Option<UuidVariant> 
get_version			    pub fn get_version(&self) -> Option<UuidVersion> 
get_version_num			    pub fn get_version_num(&self) -> uint 
hash			    fn hash(&self, state: &mut S) 
is_nil			    pub fn is_nil(&self) -> bool 
main			fn main() 
new			    pub fn new(v: UuidVersion) -> Option<Uuid> 
new_v4			    pub fn new_v4() -> Uuid 
nil			    pub fn nil() -> Uuid 
parse_str			    pub fn parse_str(bh: &mut BenchHarness) 
parse_string			    pub fn parse_string(us: &str) -> Result<Uuid, ParseError> 
rand			    fn rand<R: rand::Rng>(rng: &mut R) -> Uuid 
rand			impl rand::Rand for Uuid 
set_variant			    fn set_variant(&mut self, v: UuidVariant) 
set_version			    fn set_version(&mut self, v: UuidVersion) 
test			mod test 
test_as_bytes			    fn test_as_bytes() 
test_bytes_roundtrip			    fn test_bytes_roundtrip() 
test_compare			    fn test_compare() 
test_from_bytes			    fn test_from_bytes() 
test_from_fields			    fn test_from_fields() 
test_get_variant			    fn test_get_variant() 
test_get_version			    fn test_get_version() 
test_iterbytes_impl_for_uuid			    fn test_iterbytes_impl_for_uuid() 
test_new			    fn test_new() 
test_new_v4			    fn test_new_v4() 
test_nil			    fn test_nil() 
test_operator_eq			    fn test_operator_eq() 
test_parse_uuid_v4			    fn test_parse_uuid_v4() 
test_rand_rand			    fn test_rand_rand() 
test_serialize_round_trip			    fn test_serialize_round_trip() 
test_string_roundtrip			    fn test_string_roundtrip() 
test_to_hyphenated_str			    fn test_to_hyphenated_str() 
test_to_simple_str			    fn test_to_simple_str() 
test_to_str			    fn test_to_str() 
test_to_str_matching			    fn test_to_str_matching() 
test_to_urn_str			    fn test_to_urn_str() 
to_hyphenated_str			    pub fn to_hyphenated_str(&self) -> ~str 
to_simple_str			    pub fn to_simple_str(&self) -> ~str 
to_urn_str			    pub fn to_urn_str(&self) -> ~str 
uuid_to_str			    pub fn uuid_to_str(bh: &mut BenchHarness) 
