CheckTypeForPrivatenessVisitor			struct CheckTypeForPrivatenessVisitor<'a, 'b: 'a, 'tcx: 'b> 
EmbargoVisitor			impl<'a, 'tcx> EmbargoVisitor<'a, 'tcx> 
EmbargoVisitor			struct EmbargoVisitor<'a, 'tcx: 'a> 
FieldName			enum FieldName 
ParentVisitor			struct ParentVisitor 
PrivacyResult			enum PrivacyResult 
PrivacyVisitor			impl<'a, 'tcx> PrivacyVisitor<'a, 'tcx> 
PrivacyVisitor			struct PrivacyVisitor<'a, 'tcx: 'a> 
SanePrivacyVisitor			impl<'a, 'tcx> SanePrivacyVisitor<'a, 'tcx> 
SanePrivacyVisitor			struct SanePrivacyVisitor<'a, 'tcx: 'a> 
VisiblePrivateTypesVisitor			impl<'a, 'tcx> VisiblePrivateTypesVisitor<'a, 'tcx> 
VisiblePrivateTypesVisitor			struct VisiblePrivateTypesVisitor<'a, 'tcx: 'a> 
Visitor for CheckTypeForPrivatenessVisitor			impl<'a, 'b, 'tcx, 'v> Visitor<'v> for CheckTypeForPrivatenessVisitor<'a, 'b, 'tcx> 
Visitor for EmbargoVisitor			impl<'a, 'tcx, 'v> Visitor<'v> for EmbargoVisitor<'a, 'tcx> 
Visitor for ParentVisitor			impl<'v> Visitor<'v> for ParentVisitor 
Visitor for PrivacyVisitor			impl<'a, 'tcx, 'v> Visitor<'v> for PrivacyVisitor<'a, 'tcx> 
Visitor for SanePrivacyVisitor			impl<'a, 'tcx, 'v> Visitor<'v> for SanePrivacyVisitor<'a, 'tcx> 
Visitor for VisiblePrivateTypesVisitor			impl<'a, 'tcx, 'v> Visitor<'v> for VisiblePrivateTypesVisitor<'a, 'tcx> 
check_all_inherited			    fn check_all_inherited(&self, item: &ast::Item) 
check_crate			pub fn check_crate(tcx: &ty::ctxt,
check_field			    fn check_field(&mut self,
check_inherited			        fn check_inherited(tcx: &ty::ctxt, sp: Span, vis: ast::Visibility) 
check_method			    fn check_method(&mut self, span: Span, origin: &MethodOrigin,
check_path			    fn check_path(&mut self, span: Span, path_id: ast::NodeId, last: ast::Name) 
check_sane_privacy			    fn check_sane_privacy(&self, item: &ast::Item) 
check_static_method			    fn check_static_method(&mut self,
check_ty_param_bound			    fn check_ty_param_bound(&self,
def_privacy			    fn def_privacy(&self, did: ast::DefId) -> PrivacyResult 
ensure_public			    fn ensure_public(&self, span: Span, to_check: ast::DefId,
exported_trait			    fn exported_trait(&self, _id: ast::NodeId) -> bool 
item_is_public			    fn item_is_public(&self, id: &ast::NodeId, vis: ast::Visibility) -> bool 
nodestr			    fn nodestr(&self, id: ast::NodeId) -> String 
path_is_private_type			    fn path_is_private_type(&self, path_id: ast::NodeId) -> bool 
private_accessible			    fn private_accessible(&self, id: ast::NodeId) -> bool 
report_error			    fn report_error(&self, result: CheckResult) -> bool 
trait_is_public			    fn trait_is_public(&self, trait_id: ast::NodeId) -> bool 
type			                                                            struct type?!"),
type			                                                 struct type?!"),
visit_block			    fn visit_block(&mut self, _: &ast::Block) {}
visit_expr			    fn visit_expr(&mut self, _: &ast::Expr) {}
visit_expr			    fn visit_expr(&mut self, expr: &ast::Expr) 
visit_fn			    fn visit_fn(&mut self, a: visit::FnKind<'v>, b: &'v ast::FnDecl,
visit_fn			    fn visit_fn(&mut self, fk: visit::FnKind<'v>, fd: &'v ast::FnDecl,
visit_foreign_item			    fn visit_foreign_item(&mut self, a: &ast::ForeignItem) 
visit_foreign_item			    fn visit_foreign_item(&mut self, fi: &ast::ForeignItem) 
visit_foreign_item			    fn visit_foreign_item(&mut self, item: &ast::ForeignItem) 
visit_generics			    fn visit_generics(&mut self, generics: &ast::Generics) 
visit_impl_item			    fn visit_impl_item(&mut self, ii: &'v ast::ImplItem) 
visit_item			    fn visit_item(&mut self, item: &ast::Item) 
visit_mod			    fn visit_mod(&mut self, m: &ast::Mod, _sp: Span, id: ast::NodeId) 
visit_pat			    fn visit_pat(&mut self, pattern: &ast::Pat) 
visit_path			    fn visit_path(&mut self, path: &ast::Path, id: ast::NodeId) 
visit_struct_def			    fn visit_struct_def(&mut self, s: &ast::StructDef, _: ast::Ident,
visit_struct_field			    fn visit_struct_field(&mut self, s: &ast::StructField) 
visit_ty			    fn visit_ty(&mut self, t: &ast::Ty) 
visit_ty			    fn visit_ty(&mut self, ty: &ast::Ty) 
visit_variant			    fn visit_variant(&mut self, v: &ast::Variant, g: &ast::Generics) 
