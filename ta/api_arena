Arena			impl Arena 
Arena			pub struct Arena 
Chunk			impl Chunk 
Chunk			struct Chunk 
Drop			impl Drop for Arena 
Inner			    struct Inner { value: uint }
Noncopy			    struct Noncopy 
Outer			    struct Outer<'a> { inner: &'a Inner }
Point			    struct Point 
TypedArena			pub struct TypedArena<T> 
TypedArenaChunk			struct TypedArenaChunk<T> 
alloc			    pub fn alloc<'a, T>(&'a self, op: || -> T) -> &'a T 
alloc			    pub fn alloc<'a>(&'a self, object: T) -> &'a T 
alloc_copy			    fn alloc_copy<'a, T>(&'a self, op: || -> T) -> &'a T 
alloc_copy_grow			    fn alloc_copy_grow(&self, n_bytes: uint, align: uint) -> *const u8 
alloc_copy_inner			    fn alloc_copy_inner(&self, n_bytes: uint, align: uint) -> *const u8 
alloc_noncopy			    fn alloc_noncopy<'a, T>(&'a self, op: || -> T) -> &'a T 
alloc_noncopy_grow			    fn alloc_noncopy_grow(&self, n_bytes: uint,
alloc_noncopy_inner			    fn alloc_noncopy_inner(&self, n_bytes: uint,
as_ptr			    unsafe fn as_ptr(&self) -> *const u8 
bench_copy			    pub fn bench_copy(b: &mut Bencher) 
bench_copy_nonarena			    pub fn bench_copy_nonarena(b: &mut Bencher) 
bench_copy_old_arena			    pub fn bench_copy_old_arena(b: &mut Bencher) 
bench_noncopy			    pub fn bench_noncopy(b: &mut Bencher) 
bench_noncopy_nonarena			    pub fn bench_noncopy_nonarena(b: &mut Bencher) 
bench_noncopy_old_arena			    pub fn bench_noncopy_old_arena(b: &mut Bencher) 
bitpack_tydesc_ptr			fn bitpack_tydesc_ptr(p: *const TyDesc, is_done: bool) -> uint 
capacity			    fn capacity(&self) -> uint 
chunk			fn chunk(size: uint, is_copy: bool) -> Chunk 
chunk_size			    fn chunk_size(&self) -> uint 
destroy			    unsafe fn destroy(&mut self, len: uint) 
destroy_chunk			unsafe fn destroy_chunk(chunk: &Chunk) 
drop			    fn drop(&mut self) 
end			    fn end(&self) -> *const u8 
grow			    fn grow(&self) 
new			    fn new(next: Option<Box<TypedArenaChunk<T>>>, capacity: uint)
new			    pub fn new() -> Arena 
new			    pub fn new() -> TypedArena<T> 
new_with_size			    pub fn new_with_size(initial_size: uint) -> Arena 
round_up			fn round_up(base: uint, align: uint) -> uint 
start			    fn start(&self) -> *const u8 
tests			mod tests 
un_bitpack_tydesc_ptr			fn un_bitpack_tydesc_ptr(p: uint) -> (*const TyDesc, bool) 
with_capacity			    pub fn with_capacity(capacity: uint) -> TypedArena<T> 
