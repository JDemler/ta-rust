FromStr			impl FromStr for Path 
FromStr			impl FromStr for Url 
Input			enum Input 
Path			impl Path 
Path			pub struct Path 
State			    enum State 
Url			impl Url 
Url			pub struct Url 
UserInfo			impl UserInfo 
UserInfo			pub struct UserInfo 
decode			pub fn decode(s: &str) -> String 
decode_component			pub fn decode_component(s: &str) -> String 
decode_form_urlencoded			pub fn decode_form_urlencoded(s: &[u8]) -> HashMap<String, Vec<String>> 
decode_inner			fn decode_inner(s: &str, full_url: bool) -> String 
encode			pub fn encode(s: &str) -> String 
encode_component			pub fn encode_component(s: &str) -> String 
encode_form_urlencoded			pub fn encode_form_urlencoded(m: &HashMap<String, Vec<String>>) -> String 
encode_inner			fn encode_inner(s: &str, full_url: bool) -> String 
encode_plus			fn encode_plus(s: &str) -> String 
fmt			    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result 
fmt			impl fmt::Show for Path 
fmt			impl fmt::Show for Url 
fmt			impl fmt::Show for UserInfo 
from_str			    fn from_str(s: &str) -> Option<Path> 
from_str			    fn from_str(s: &str) -> Option<Url> 
from_str			pub fn from_str(rawurl: &str) -> Result<Url, String> 
get_authority			fn get_authority(rawurl: &str) ->
get_path			fn get_path(rawurl: &str, authority: bool) ->
get_query_fragment			fn get_query_fragment(rawurl: &str) ->
get_scheme			pub fn get_scheme(rawurl: &str) -> Result<(String, String), String> 
hash			    fn hash(&self, state: &mut S) 
new			    pub fn new(path: String,
new			    pub fn new(scheme: String,
new			    pub fn new(user: String, pass: Option<String>) -> UserInfo 
path_from_str			pub fn path_from_str(rawpath: &str) -> Result<Path, String> 
query_from_str			fn query_from_str(rawquery: &str) -> Query 
query_to_str			pub fn query_to_str(query: &Query) -> String 
split_char_first			fn split_char_first(s: &str, c: char) -> (String, String) 
tests			mod tests 
